{%- if recommendations.products_count > 0 -%}
<div class="product-recommendations">
	{%- if section.settings.heading != blank -%}
    <div class="title-box h3 d-flex align-items-center justify-content-between mb-3">
      	<strong>{{ section.settings.heading | escape }}</strong>
        <div class="custom-nav">
         	<a href="" onclick="return false;" class="btn btn-link text-body border-0 p-2 prev"><i data-feather="chevron-left"></i></a>
            <a href="" onclick="return false;" class="btn btn-link text-body border-0 p-2 next"><i data-feather="chevron-right"></i></a>
         </div>
     </div>
     {%- endif -%}
     <div class="{% if recommendations.products_count >= 3 %} related-slider owl-carousel{% else %} row{% endif %}">
       {%- for product in recommendations.products -%}
         {% if recommendations.products_count < 3 %}<div class="col-6">{% endif %}
         <div class="productborder">{% include 'products-grid', max_height: 250, product: product, show_vendor: section.settings.show_vendor %}</div>
         {% if recommendations.products_count < 3 %}</div>{% endif %}
       {%- endfor -%}
     </div>
</div>
{%- endif -%}
<script>
$(document).ready(function() {
  var loadProductRecommendationsIntoSection = function() {
    // Look for an element with class 'product-recommendations'
    var productRecommendationsSection = document.querySelector(".product-recommendations");
    if (productRecommendationsSection === null) { return; }
    // Read product id from data attribute
    var productId = productRecommendationsSection.dataset.productId;
    // Read limit from data attribute
    var limit = productRecommendationsSection.dataset.limit;
    // Build request URL
    var requestUrl = "/recommendations/products?section_id=product-recommendations&limit="+limit+"&product_id="+productId;
    // Create request and submit it using Ajax
    var request = new XMLHttpRequest();
    request.open("GET", requestUrl);
    request.onload = function() {
      if (request.status >= 200 && request.status < 300) {
        var container = document.createElement("div");
        container.innerHTML = request.response;
        if(container.querySelector(".product-recommendations") != null){
        	productRecommendationsSection.parentElement.innerHTML = container.querySelector(".product-recommendations").innerHTML;
        } else {
          productRecommendationsSection.parentElement.innerHTML = '';
        }
      }
      $('.related-slider').owlCarousel({
          margin: 15,
          stagePadding:0,
          lazyLoad: true,
          dots: false,
          loop: true,
          items: 2,
          responsive: {0: {items: 1},341: {items: 2},768: {items: 2},993: {items: 2}}
        });
      	$('#related').find(".prev").click(function() {
          $('.related-slider').trigger('prev.owl.carousel');
        });
      	$('#related').find(".next").click(function() {
          $('.related-slider').trigger('next.owl.carousel');
        });
    };
    request.send();
  };
  // If your section has theme settings, the theme editor
  // reloads the section as you edit those settings. When that happens, the
  // recommendations need to be fetched again.
  // See https://help.shopify.com/en/themes/development/sections/integration-with-theme-editor
  document.addEventListener("shopify:section:load", function(event) {
    if (event.detail.sectionId === "product-recommendations") {
      loadProductRecommendationsIntoSection();
    }
  });
  // Fetching the recommendations on page load
  loadProductRecommendationsIntoSection();
});
</script>
  
{% schema %}
{
  "name": "Product recommendations",
  "settings": [
	{
      "type": "text",
      "id": "heading",
      "label": {"nl": "Title"},
      "default": {"nl": "Wellicht vind je dit ook leuk"}
    }
  ]
}
{% endschema %}
